use std::fs::Metadata;
use std::time::UNIX_EPOCH;

/// Convert file metadata timestamps into a Unix timestamp in seconds.
pub fn metadata_timestamp(metadata: &Metadata) -> u64 {
    metadata
        .created()
        .or_else(|_| metadata.modified())
        .unwrap_or(UNIX_EPOCH)
        .duration_since(UNIX_EPOCH)
        .unwrap_or_default()
        .as_secs()
}

/// Decide whether a text snippet should be filtered from summaries.
pub fn should_filter_message_text(text: &str) -> bool {
    let trimmed = text.trim();
    trimmed.is_empty()
        || trimmed.contains(
            "Caveat: The messages below were generated by the user while running local commands",
        )
        || trimmed.starts_with("<ide_opened_file>")
        || trimmed.starts_with("<command-name>")
        || trimmed.starts_with("<command-message>")
        || trimmed.starts_with("<ide_selection>")
        || trimmed.starts_with("<local-command-stdout>")
        || trimmed.starts_with("<system-reminder>")
        || trimmed == "Warmup"
}
