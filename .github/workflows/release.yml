name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag to build (e.g. v1.2.3)"
        required: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Resolve version
        id: version
        run: |
          if [ "${GITHUB_REF_TYPE}" = "tag" ]; then
            echo "value=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          elif [ -n "${INPUT_VERSION}" ]; then
            echo "value=${INPUT_VERSION}" >> "$GITHUB_OUTPUT"
          else
            echo "::error::Version input required when not running on tag"
            exit 1
          fi
        env:
          INPUT_VERSION: ${{ github.event.inputs.version }}

      - name: Validate release secrets
        run: |
          missing=0
          for name in R2_BUCKET R2_ENDPOINT R2_ACCESS_KEY R2_SECRET_KEY; do
            if [ -z "${!name}" ]; then
              echo "::error::Secret $name is not configured"
              missing=1
            fi
          done
          if [ "$missing" -ne 0 ]; then
            exit 1
          fi
        env:
          R2_BUCKET: ${{ secrets.R2_BUCKET }}
          R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
          R2_ACCESS_KEY: ${{ secrets.R2_ACCESS_KEY }}
          R2_SECRET_KEY: ${{ secrets.R2_SECRET_KEY }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Build and upload packages
        env:
          VERSION: ${{ steps.version.outputs.value }}
          R2_BUCKET: ${{ secrets.R2_BUCKET }}
          R2_ENDPOINT: ${{ secrets.R2_ENDPOINT }}
          R2_ACCESS_KEY: ${{ secrets.R2_ACCESS_KEY }}
          R2_SECRET_KEY: ${{ secrets.R2_SECRET_KEY }}
        run: |
          chmod +x ./build_and_release.sh
          ./build_and_release.sh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ steps.version.outputs.value }}
          path: dist/
          if-no-files-found: error

      - name: Publish GitHub release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.value }}
          name: ${{ steps.version.outputs.value }}
          files: |
            dist/agentx-${{ steps.version.outputs.value }}-*.tar.gz
            dist/agentx-${{ steps.version.outputs.value }}-*.tar.gz.sha256
          generate_release_notes: true
